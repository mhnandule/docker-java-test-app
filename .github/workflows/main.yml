name: docker-java-test-app

on:
  push:
    branches: [main]
    
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Setup JDK.
        uses: actions/setup-java@v1
        with:
          java-version: 14
          
      - name: Cache Maven Package.
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build and test project with Maven.
        run: mvn -B package --file pom.xml
        
        
  publish-job:
    runs-on: ubunt-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - run: mvn -B package --file pom.xml -DskipsTest
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: Package
          path: staging
      
  docker-image-build:
    name: publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_SECRET }}
      - name: Build docker image.
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
      - name: Publish Docker Image.
        run: docker push ${{ secrets.DOCKER_REPO }}
